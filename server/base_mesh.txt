--@server

local COUNTER_HEIGHT = 40
local INTERACTION_MODEL = "models/hunter/plates/plate.mdl"
local INTERACTION_ENTITY_COLOR = Color( 255, 255, 255, 0 )

local interactionEntities = {}

local interactibleClasses = {
    ["resethandle"] = true,
    ["panel_buttonknob"] = true,
    ["counter_buttonknob"] = true,
    ["panel_pushbutton"] = true,
    ["counter_pushbutton"] = true,
    ["panel_keyhole"] = true,
    ["panel_selectorlever"] = true,
    ["counter_selectorlever"] = true,
    ["rodcontrols_button"] = true,
    ["irmselector_knob"] = true
}

local function setupInteractibleEntities( dynamicObjects )
    local index = 1

    for _, objectData in ipairs( dynamicObjects ) do
        if interactibleClasses[objectData.mesh] then
            local objectPosition = chip():localToWorld( Vector( objectData.location.x, objectData.location.y, objectData.location.z + COUNTER_HEIGHT ) )
            local objectAngle = chip():localToWorldAngles( Angle( objectData.rotation.p, objectData.rotation.y, objectData.rotation.r ) )

            local normal = objectAngle:getRight()
            objectPosition = objectPosition - normal * 1.5
            local other = objectAngle:getUp()
            objectPosition = objectPosition - other * 1.5

            local objectEntity = await( prop.createAsync( objectPosition, objectAngle, INTERACTION_MODEL, true ) )
            objectEntity:setParent( chip() )
            objectEntity:setNocollideAll( true )
            objectEntity:setColor( INTERACTION_ENTITY_COLOR )

            interactionEntities[objectEntity] = objectData
            objectData.index = index

            index = index + 1
        end
    end
end

hook.add( "JsonDataReceived", "SetupInteractibleEntities", function()
    async( setupInteractibleEntities )( BWR.Json.Data.dynamic_data )
end )

local function onPlayerInteracts( ply, key )
    if key ~= IN_KEY.USE then return end

    local entity = ply:getEyeTrace().Entity
    local entityData = interactionEntities[entity]
    if not entityData then return end

    if entityData.name:find( "pushbutton" ) then
        entity:emitSound( "Buttons.snd14", nil, math.random( 0.8, 1.2 ) )
        net.start( "PushButton" )
        net.writeUInt( entityData.index, 8 )
        net.send()
    end
end

hook.add( "KeyPress", "OnPlayerInteracts", onPlayerInteracts )
